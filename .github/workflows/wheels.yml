name: Wheels

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  BuildARMWheels:
    runs-on: ubuntu-latest
    name: Build on ubuntu-20.04 armv7
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.7
        name: Build wheels within Docker container
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}:/pymedphys"
          install: |
            apt-get update -q -y
            apt-get install -q -y \
              build-essential libssl-dev zlib1g-dev libbz2-dev \
              libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
              xz-utils tk-dev libffi-dev liblzma-dev python-openssl git

            export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
            curl https://pyenv.run | bash

            export PATH="$HOME/.pyenv/bin:$PATH"
            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"

            pyenv install 3.8.6
            pyenv global 3.8.6

            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
          run: |
            export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt
            export PATH="$HOME/.poetry/bin:$HOME/.pyenv/bin:$PATH"

            eval "$(pyenv init -)"
            eval "$(pyenv virtualenv-init -)"

            cd /pymedphys
            poetry install -E wheels
            poetry run pymedphys dev wheels

      - uses: actions/upload-artifact@v2
        with:
          name: ARM-wheels
          path: wheels
